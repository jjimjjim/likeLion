plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'dongneidle'
version = '0.0.4-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// JPA 의존성 추가 (필수)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// H2 데이터베이스 (개발용)
	runtimeOnly 'com.h2database:h2'

	// MySQL 커넥터 (운영/배포용)
	runtimeOnly 'com.mysql:mysql-connector-j'

	// OpenAI GPT API 클라이언트
	implementation 'com.theokanning.openai-gpt3-java:service:0.18.2'

	// JWT (토큰 발급/검증)
	implementation 'com.auth0:java-jwt:4.4.0'
	//JJWT 라이브러리를 사용해서 JWT 생성/검증
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Swagger UI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

}

tasks.named('test') {
	useJUnitPlatform()
}
